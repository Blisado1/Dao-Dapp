{"version":3,"sources":["App.js","loading.js","utils.js","index.js"],"names":["kit","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","style","marginTop","className","options","height","width","DaoContractAddress","App","useState","undefined","web3","setWeb3","accounts","setAccounts","contract","setContract","admin","setAdmin","shares","setShares","proposals","setProposals","withdrawAmount","withdrawTo","contributeAmount","redeemAmount","transferAmount","transferTo","proposalName","proposalAmount","proposalTo","inputs","setInputs","useEffect","a","Promise","resolve","reject","window","addEventListener","celo","Web3","enable","console","log","provider","providers","HttpProvider","newKitFromWeb3","eth","getAccounts","Contract","DaoAbi","methods","call","init","on","isReady","approve","_price","cUSDContract","Erc20Abi","send","from","result","updateShares","_shares","BigNumber","shiftedBy","toString","updateProposals","parseInt","nextProposalId","i","all","votes","proposal","hasVoted","push","proposalId","notification","executeProposal","setTimeout","notificationOff","e","preventDefault","amount","target","elements","value","to","withdraw","contribute","redeemShares","transferShares","vote","name","recipient","createProposal","_text","document","querySelector","display","textContent","onChange","zIndex","role","id","toLowerCase","onSubmit","withdrawFunds","htmlFor","type","min","placeholder","map","key","now","Date","getTime","end","isFinished","onClick","toLocaleString","executed","ReactDOM","render","getElementById"],"mappings":"olXAYIA,E,6KCREC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,c,OACAC,iBAAkB,CAChBC,oBAAqB,mBAaVC,EATC,WACd,OACE,yBAAKC,MAAO,CAACC,UAAW,UACpB,wBAAIC,UAAU,eAAd,8BACA,kBAAC,IAAD,CAAQC,QAASV,EAAgBW,OAAQ,IAAKC,MAAO,QDRvDC,EAAqB,6CA4bZC,MAvbf,WACE,MAAwBC,wBAASC,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCH,wBAASC,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCL,wBAASC,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BP,wBAASC,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA4BT,wBAASC,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAAkCX,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KACA,EAA4Bb,mBAAS,CACnCc,eAAgB,GAChBC,WAAY,GACZC,iBAAkB,GAClBC,aAAc,GACdC,eAAgB,GAChBC,WAAY,GACZC,aAAc,GACdC,eAAgB,GAChBC,WAAY,KATd,mBAAOC,EAAP,KAAeC,EAAf,KAaAC,qBAAU,YACE,uCAAG,kCAAAC,EAAA,sEEhCR,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAL,EAAA,0DAE1BI,OAAOE,KAFmB,wBAGtB9B,EAAO,IAAI+B,IAAKH,OAAOE,MAHD,kBAMpBF,OAAOE,KAAKE,SANQ,OAQ1BN,EAAQ1B,GARkB,gDAU1B2B,EAAO,EAAD,IAVoB,gCAcrBC,OAAO5B,MAERA,EAAO4B,OAAO5B,KACpBiC,QAAQC,IAAI,2BACZR,EAAQ1B,KAIFmC,EAAW,IAAIJ,IAAKK,UAAUC,aAClC,yBAEIrC,EAAO,IAAI+B,IAAKI,GACtBF,QAAQC,IAAI,gDACZR,EAAQ1B,IA3BoB,6DF8BnB,cACLA,EADK,OAGXlB,EAAMwD,yBAAetC,GAHV,SAKYlB,EAAIkB,KAAKuC,IAAIC,cALzB,cAKLtC,EALK,OAOLE,EAAW,IAAItB,EAAIkB,KAAKuC,IAAIE,SAChCC,EAAQ9C,GARC,UAWSQ,EAASuC,QAC1BrC,QACAsC,OAbQ,QAWLtC,EAXK,OAeXL,EAAQD,GACRG,EAAYD,GACZG,EAAYD,GACZG,EAASD,GAlBE,4CAAH,qDAoBVuC,GACAjB,OAAOE,KAAKgB,GAAG,mBAAmB,SAAA5C,GAChCC,EAAYD,QAEb,IAEH,IAAM6C,EAAU,WACd,MACsB,qBAAb3C,GACY,qBAATJ,GACa,qBAAbE,GACU,qBAAVI,GApDD,SAmEE0C,EAnEF,8EAmEb,WAAuBC,GAAvB,iBAAAzB,EAAA,6DACQ0B,EAAe,IAAIpE,EAAIkB,KAAKuC,IAAIE,SAASU,EAxEvB,8CAuE1B,SAEuBD,EAAaP,QAC/BK,QAAQpD,EAAoBqD,GAC5BG,KAAK,CAAEC,KAAMnD,EAAS,KAJ3B,cAEQoD,EAFR,yBAKSA,GALT,4CAnEa,+BA2EEC,IA3EF,2EA2Eb,8BAAA/B,EAAA,sEACuBpB,EAASuC,QAC3BnC,OAAON,EAAS,IAChB0C,OAHL,OACQpC,EADR,OAIQgD,EAAU,IAAIC,IAAUjD,GAAQkD,WArFnB,IAqF8CC,WACjElD,EAAU+C,GALZ,4CA3Ea,+BAmFEI,IAnFF,2EAmFb,wCAAApC,EAAA,kEACyBqC,SADzB,SACwCzD,EAASuC,QAC5CmB,iBACAlB,OAHL,mBACQkB,GADR,cAKQpD,EAAY,GACVqD,EAAI,EANd,YAMiBA,EAAID,GANrB,kCAOuCrC,QAAQuC,IAAI,CAC7C5D,EAASuC,QAAQjC,UAAUqD,GAAGnB,OAC9BxC,EAASuC,QAAQsB,MAAM/D,EAAS,GAAI6D,GAAGnB,SAT7C,oCAOWsB,EAPX,KAOqBC,EAPrB,KAWIzD,EAAU0D,KAAV,2BAAmBF,GAAnB,IAA6BC,cAXjC,QAMqCJ,IANrC,uBAaEpD,EAAaD,GAbf,6CAnFa,kEAmGb,WAA+B2D,GAA/B,SAAA7C,EAAA,6DACE8C,GAAa,6BADf,kBAGUlE,EAASuC,QACZ4B,gBAAgBF,GAChBjB,KAAK,CAACC,KAAMnD,EAAS,KAL5B,cAMIoE,GAAa,yCANjB,SAQUV,IARV,uDAUIU,GAAa,gBAAD,cAVhB,QAYEE,WAAWC,GAAiB,KAZ9B,0DAnGa,kEAkHb,WAA6BC,GAA7B,iBAAAlD,EAAA,6DACE8C,GAAa,4BACbI,EAAEC,iBACIC,EAAS,IAAInB,IAAUiB,EAAEG,OAAOC,SAAS,GAAGC,OAAOrB,UA3HtC,IA4HbsB,EAAKN,EAAEG,OAAOC,SAAS,GAAGC,MAJlC,kBAMU3E,EAASuC,QACZsC,SAASL,EAAQI,GACjB5B,KAAK,CAACC,KAAMnD,EAAS,KAR5B,OASMoE,GAAa,uCATnB,kDAYIA,GAAa,gBAAD,cAZhB,QAcEhD,EAAU,2BACLD,GADI,IAEPT,eAAgB,GAChBC,WAAY,MAEd2D,WAAWC,GAAiB,KAnB9B,2DAlHa,kEAwIb,WAA0BC,GAA1B,eAAAlD,EAAA,6DACE8C,GAAa,0CACbI,EAAEC,iBACIC,EAAS,IAAInB,IAAUiB,EAAEG,OAAOC,SAAS,GAAGC,OAAOrB,UAjJtC,IA8IrB,kBAKUV,EAAQ4B,GALlB,uDAOIN,GAAa,gBAAD,cAPhB,eASEA,GAAa,mCATf,oBAWUlE,EAASuC,QACZuC,WAAWN,GACXxB,KAAK,CAAEC,KAAMnD,EAAS,KAb7B,eAcIoE,GAAa,2CAdjB,UAeUf,IAfV,2DAiBIe,GAAa,gBAAD,cAjBhB,QAmBEhD,EAAU,2BACLD,GADI,IAEPP,iBAAkB,MAEpB0D,WAAWC,GAAiB,KAvB9B,kEAxIa,kEAkKb,WAA4BC,GAA5B,eAAAlD,EAAA,6DACE8C,GAAa,gCACbI,EAAEC,iBACIC,EAAS,IAAInB,IAAUiB,EAAEG,OAAOC,SAAS,GAAGC,OAAOrB,UA3KtC,IAwKrB,kBAKUtD,EAASuC,QACZwC,aAAaP,GACbxB,KAAK,CAACC,KAAMnD,EAAS,KAP5B,cAQIoE,GAAa,iEARjB,SAUUf,IAVV,yDAYIe,GAAa,gBAAD,cAZhB,QAcEhD,EAAU,2BACLD,GADI,IAEPN,aAAc,MAEhByD,WAAWC,GAAiB,KAlB9B,2DAlKa,oEAuLb,WAA8BC,GAA9B,iBAAAlD,EAAA,6DACE8C,GAAa,kCACbI,EAAEC,iBACIC,EAAS,IAAInB,IAAUiB,EAAEG,OAAOC,SAAS,GAAGC,OAAOrB,UAhMtC,IAiMbsB,EAAKN,EAAEG,OAAOC,SAAS,GAAGC,MAJlC,kBAMU3E,EAASuC,QACZyC,eAAeR,EAAQI,GACvB5B,KAAK,CAACC,KAAMnD,EAAS,KAR5B,cASMoE,GAAa,kCATnB,UAWUf,IAXV,0DAaIe,GAAa,gBAAD,cAbhB,QAeEhD,EAAU,2BACLD,GADI,IAEPL,eAAgB,GAChBC,WAAY,MAEduD,WAAWC,GAAiB,KApB9B,2DAvLa,oEA8Mb,WAAoBJ,GAApB,SAAA7C,EAAA,6DACE8C,GAAa,6BADf,kBAGUlE,EAASuC,QACZ0C,KAAKhB,GACLjB,KAAK,CAACC,KAAMnD,EAAS,KAL5B,cAMIoE,GAAa,gCANjB,SAQYV,IARZ,uDAUIU,GAAa,gBAAD,cAVhB,QAYEE,WAAWC,GAAiB,KAZ9B,0DA9Ma,oEA6Nb,WAA8BC,GAA9B,mBAAAlD,EAAA,6DACE8C,GAAa,iCACbI,EAAEC,iBACIW,EAAOZ,EAAEG,OAAOC,SAAS,GAAGC,MAC5BH,EAAS,IAAInB,IAAUiB,EAAEG,OAAOC,SAAS,GAAGC,OAAOrB,UAvOtC,IAwOb6B,EAAYb,EAAEG,OAAOC,SAAS,GAAGC,MALzC,kBAQU3E,EAASuC,QACZ6C,eAAeF,EAAMV,EAAQW,GAC7BnC,KAAK,CAACC,KAAMnD,EAAS,KAV5B,cAWIoE,GAAa,6CAXjB,UAaUV,IAbV,0DAeIU,GAAa,gBAAD,cAfhB,QAkBEhD,EAAU,CACRJ,aAAc,GACdC,eAAgB,GAChBC,WAAY,KAGdoD,WAAWC,GAAiB,KAxB9B,2DA7Na,sBA8Pb,SAASH,GAAamB,GACpBC,SAASC,cAAc,UAAUrG,MAAMsG,QAAU,QACjDF,SAASC,cAAc,iBAAiBE,YAAcJ,EAGxD,SAAShB,KACPiB,SAASC,cAAc,UAAUrG,MAAMsG,QAAU,OAGnD,SAASE,GAASR,EAAMZ,GACtBpD,EAAU,2BACLD,GADI,kBAENiE,EAAOZ,EAAEG,OAAOE,SAIrB,OAtNAxD,qBAAU,WAELwB,MACDQ,IACAK,IACAa,QAGD,CAACvE,EAAUE,EAAUJ,EAAMM,IA8MzByC,IAMH,yBAAKvD,UAAU,aACX,yBAAKA,UAAU,sCAAsCF,MAAO,CAACyG,OAAO,KAAOC,KAAK,SAC9E,0BAAMC,GAAG,gBAAT,eAGJ,wBAAIzG,UAAU,eAAd,OACA,uCAAaU,EAAS,IACtB,sCAAYM,GAEXN,EAAS,GAAGgG,gBAAkB5F,EAAM4F,cACnC,oCACA,yBAAK1G,UAAU,OACb,yBAAKA,UAAU,aACb,8CACA,0BAAM2G,SAAU,SAAAzB,GAAC,OAlSd,2CAkSkB0B,CAAc1B,KACjC,yBAAKlF,UAAU,cACb,2BAAO6G,QAAQ,UAAf,UACA,2BAAOC,KAAK,SAAS9G,UAAU,eAAe+G,IAAK,EAAGN,GAAG,SAASlB,MAAO1D,EAAOT,eAAgBkF,SAAU,SAAApB,GAAC,OAAIoB,GAAS,iBAAkBpB,IAAI8B,YAAY,gCAE5J,yBAAKhH,UAAU,cACb,2BAAO6G,QAAQ,MAAf,MACA,2BAAOC,KAAK,OAAO9G,UAAU,eAAeyG,GAAG,KAAKlB,MAAO1D,EAAOR,WAAYiF,SAAU,SAAApB,GAAC,OAAIoB,GAAS,aAAcpB,OAEtH,4BAAQ4B,KAAK,SAAS9G,UAAU,mBAAhC,aAIP,8BAEG,KAEJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0CACA,0BAAM2G,SAAU,SAAAzB,GAAC,OAtTZ,2CAsTgBQ,CAAWR,KAC9B,yBAAKlF,UAAU,cACb,2BAAO6G,QAAQ,UAAf,UACA,2BAAOC,KAAK,SAAS9G,UAAU,eAAeyG,GAAG,SAASM,IAAK,EAAGxB,MAAO1D,EAAOP,iBAAkBgF,SAAU,SAAApB,GAAC,OAAIoB,GAAS,mBAAoBpB,IAAI8B,YAAY,+BAEhK,4BAAQF,KAAK,SAAS9G,UAAU,mBAAhC,aAKN,6BAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,6CACA,0BAAM2G,SAAU,SAAAzB,GAAC,OArUZ,2CAqUgBS,CAAaT,KAChC,yBAAKlF,UAAU,cACb,2BAAO6G,QAAQ,UAAf,UACA,2BAAOC,KAAK,SAAS9G,UAAU,eAAeyG,GAAG,SAASM,IAAK,EAAGxB,MAAO1D,EAAON,aAAc+E,SAAU,SAAApB,GAAC,OAAIoB,GAAS,eAAgBpB,IAAK8B,YAAY,gCAEzJ,4BAAQF,KAAK,SAAS9G,UAAU,mBAAhC,aAKN,6BAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,+CACA,0BAAM2G,SAAU,SAAAzB,GAAC,OApVZ,4CAoVgBU,CAAeV,KAClC,yBAAKlF,UAAU,cACb,2BAAO6G,QAAQ,UAAf,UACA,2BAAOC,KAAK,SAAS9G,UAAU,eAAeyG,GAAG,SAASM,IAAK,EAAGxB,MAAO1D,EAAOL,eAAgB8E,SAAU,SAAApB,GAAC,OAAIoB,GAAS,iBAAkBpB,IAAI8B,YAAY,kCAE5J,yBAAKhH,UAAU,cACb,2BAAO6G,QAAQ,MAAf,MACA,2BAAOC,KAAK,OAAO9G,UAAU,eAAeyG,GAAG,KAAKlB,MAAO1D,EAAOJ,WAAY6E,SAAU,SAAApB,GAAC,OAAIoB,GAAS,aAAcpB,OAEtH,4BAAQ4B,KAAK,SAAS9G,UAAU,mBAAhC,aAKN,6BAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,+CACA,0BAAM2G,SAAU,SAAAzB,GAAC,OAvWZ,4CAuWgBc,CAAed,KAClC,yBAAKlF,UAAU,cACb,2BAAO6G,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAO9G,UAAU,eAAeyG,GAAG,OAAOlB,MAAO1D,EAAOH,aAAc4E,SAAU,SAAApB,GAAC,OAAIoB,GAAS,eAAgBpB,OAE5H,yBAAKlF,UAAU,cACb,2BAAO6G,QAAQ,UAAf,UACA,2BAAOC,KAAK,SAAS9G,UAAU,eAAeyG,GAAG,SAASM,IAAK,EAAGxB,MAAO1D,EAAOF,eAAgBqF,YAAY,iBAAiBV,SAAU,SAAApB,GAAC,OAAIoB,GAAS,iBAAkBpB,OAEzK,yBAAKlF,UAAU,cACb,2BAAO6G,QAAQ,aAAf,aACA,2BAAOC,KAAK,OAAO9G,UAAU,eAAeyG,GAAG,YAAYlB,MAAO1D,EAAOD,WAAY0E,SAAU,SAAApB,GAAC,OAAIoB,GAAS,aAAcpB,OAE7H,4BAAQ4B,KAAK,SAAS9G,UAAU,mBAAhC,aAKN,6BAEA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yCACA,2BAAOA,UAAU,SACf,+BACE,4BACE,kCACA,oCACA,sCACA,yCACA,qCACA,oCACA,uCACA,0CAGJ,+BACGkB,EAAU+F,KAAI,SAAAvC,GAAQ,OACrB,wBAAIwC,IAAKxC,EAAS+B,IAChB,4BAAK/B,EAAS+B,IACd,4BAAK/B,EAASoB,MACd,4BAAK,IAAI7B,IAAUS,EAASU,QAAQlB,WAtZ/B,IAsZ0DC,WAA/D,SACA,4BAAKO,EAASqB,WACd,4BAAK,IAAI9B,IAAUS,EAASD,OAAOP,WAxZ9B,IAwZyDC,YAC9D,4BA3JhB,SAAoBO,GAClB,IAAMyC,GAAM,IAAIC,MAAOC,UAEvB,QADqB,IAAID,KAA8B,IAAzB/C,SAASK,EAAS4C,MAC1BH,EAAO,GAyJZI,CAAW7C,GAAY,gBACtBA,EAASC,SAAW,oBACpB,4BACE6C,QAAS,SAAAtC,GAAC,OAvZnB,4CAuZuBW,CAAKnB,EAAS+B,KAC5BK,KAAK,SACL9G,UAAU,mBAHZ,SAQJ,4BACI,IAAIoH,KAA8B,IAAzB/C,SAASK,EAAS4C,MAAcG,kBAE7C,4BACG/C,EAASgD,SAAW,MACnB5G,EAAM4F,gBAAkBhG,EAAS,GAAGgG,cAClC,4BACEc,QAAS,SAAAtC,GAAC,OArarB,2CAqayBH,CAAgBL,EAAS+B,KACvCK,KAAK,SACL9G,UAAU,mBAHZ,WAME,eA3Jf,kBAAC,EAAD,OGxRX2H,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAAS2B,eAAe,W","file":"static/js/main.2025903f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DaoAbi from './contracts/DAO.abi.json';\nimport Erc20Abi from './contracts/IERC20Token.abi.json'\nimport { getWeb3 } from './utils.js';\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport BigNumber from \"bignumber.js\"\nimport Loading from './loading';\n\nconst ERC20_DECIMALS = 18\nconst DaoContractAddress = \"0x764354Ab0CDE955258aA7b6fE3C6718A868BA535\"\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\"\n\nlet kit\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [admin, setAdmin] = useState(undefined);\n  const [shares, setShares] = useState(undefined);\n  const [proposals, setProposals] = useState([]);\n  const [inputs, setInputs] = useState({\n    withdrawAmount: \"\",\n    withdrawTo: \"\",\n    contributeAmount: \"\",\n    redeemAmount: \"\",\n    transferAmount: \"\",\n    transferTo: \"\",\n    proposalName: \"\",\n    proposalAmount: \"\",\n    proposalTo: \"\",\n  });\n\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n\n      kit = newKitFromWeb3(web3)\n      \n      const accounts = await kit.web3.eth.getAccounts()\n      \n      const contract = new kit.web3.eth.Contract(\n        DaoAbi, DaoContractAddress\n      );\n      \n      const admin = await contract.methods\n        .admin()\n        .call();\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setContract(contract);\n      setAdmin(admin);\n    }\n    init();\n    window.celo.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n  }, []);\n\n  const isReady = () => {\n    return (\n      typeof contract !== 'undefined' \n      && typeof web3 !== 'undefined'\n      && typeof accounts !== 'undefined'\n      && typeof admin !== 'undefined'\n    );\n  }\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    if(isReady()) {\n      updateShares();\n      updateProposals();\n      notificationOff();\n    }\n    // eslint-disable-next-line\n  }, [accounts, contract, web3, admin]);\n\n  \n  async function approve(_price) {\n    const cUSDContract = new kit.web3.eth.Contract(Erc20Abi, cUSDContractAddress);\n    const result = await cUSDContract.methods\n      .approve(DaoContractAddress, _price)\n      .send({ from: accounts[0] });\n    return result\n  }\n\n  async function updateShares() {\n    const shares = await contract.methods\n      .shares(accounts[0])\n      .call();\n    const _shares = new BigNumber(shares).shiftedBy(-ERC20_DECIMALS).toString()\n    setShares(_shares);\n  }\n\n  async function updateProposals() {\n    const nextProposalId = parseInt(await contract.methods\n      .nextProposalId()\n      .call());\n\n    const proposals = [];\n    for(let i = 0; i < nextProposalId; i++) { \n      const [proposal, hasVoted] = await Promise.all([\n        contract.methods.proposals(i).call(),\n        contract.methods.votes(accounts[0], i).call()\n      ]);\n      proposals.push({...proposal, hasVoted});\n    }\n    setProposals(proposals);\n  }\n\n  async function executeProposal(proposalId) {\n    notification(\"⌛ Executing Proposal\");\n    try {\n      await contract.methods\n        .executeProposal(proposalId)\n        .send({from: accounts[0]});\n      notification(`🎉 Execution was successful`);\n\n      await updateProposals();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function withdrawFunds(e) {\n    notification(\"⌛ Withdrawing funds\");\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    const to = e.target.elements[1].value;\n    try {\n      await contract.methods\n        .withdraw(amount, to)\n        .send({from: accounts[0]});\n        notification(`🎉 Successful withdrawal.`);\n\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setInputs({\n      ...inputs,\n      withdrawAmount: \"\",\n      withdrawTo: \"\",\n    });\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function contribute(e) {\n    notification(\"⌛ Waiting for payment approval...\")\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    try {\n      await approve(amount);\n    } catch (error) {\n      notification(`⚠️ ${error}`)\n    }\n    notification(`⌛ Awaiting Contribution...`)\n    try {\n      await contract.methods\n        .contribute(amount)\n        .send({ from: accounts[0] });\n      notification(`🎉 You are now a Shareholder.`);\n      await updateShares();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setInputs({\n      ...inputs,\n      contributeAmount: \"\",\n    });\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function redeemShares(e) {\n    notification(`⌛ Redeeming your shares`);\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    try {\n      await contract.methods\n        .redeemShares(amount)\n        .send({from: accounts[0]});\n      notification(`🎉 Transaction complete, check your wallet balance.`);\n    \n      await updateShares();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setInputs({\n      ...inputs,\n      redeemAmount: \"\",\n    });\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function transferShares(e) {\n    notification(`⌛ Transfering your shares`);\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    const to = e.target.elements[1].value;\n    try {\n      await contract.methods\n        .transferShares(amount, to)\n        .send({from: accounts[0]});\n        notification(`🎉 Transfer complete`)\n      \n      await updateShares();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setInputs({\n      ...inputs,\n      transferAmount: \"\",\n      transferTo: \"\",\n    });\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function vote(proposalId) {\n    notification(`⌛ Sending your vote `);\n    try {\n      await contract.methods\n        .vote(proposalId)\n        .send({from: accounts[0]});\n      notification(`🎉 Vote Successful`);\n      \n        await updateProposals();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function createProposal(e) {\n    notification(`⌛ Creating your Proposal`);\n    e.preventDefault();\n    const name = e.target.elements[0].value;\n    const amount = new BigNumber(e.target.elements[1].value).shiftedBy(ERC20_DECIMALS);\n    const recipient = e.target.elements[2].value;\n\n    try {\n      await contract.methods\n        .createProposal(name, amount, recipient)\n        .send({from: accounts[0]});\n      notification(`🎉 Proposal Creation Successful`);\n\n      await updateProposals();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n\n    setInputs({\n      proposalName: \"\",\n      proposalAmount: \"\",\n      proposalTo: \"\",\n    });\n    \n    setTimeout(notificationOff, 3000);\n  };\n\n  function isFinished(proposal) {\n    const now = new Date().getTime();\n    const proposalEnd =  new Date(parseInt(proposal.end) * 1000);\n    return (proposalEnd > now) > 0 ? false : true;\n  }\n\n  function notification(_text) {\n    document.querySelector(\".alert\").style.display = \"block\"\n    document.querySelector(\"#notification\").textContent = _text\n  }\n  \n  function notificationOff() {\n    document.querySelector(\".alert\").style.display = \"none\"\n  }\n\n  function onChange(name, e) {\n    setInputs({\n      ...inputs,\n      [name]: e.target.value,\n    });\n  }\n\n  if (!isReady()) {\n    return <Loading />\n    // return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"container\">\n        <div className=\"alert alert-warning sticky-top mt-2\" style={{zIndex:\"5\" }} role=\"alert\">\n          <span id=\"notification\">Loading...</span>\n        </div>\n\n      <h1 className=\"text-center\">DAO</h1>\n      <p>Account: {accounts[0]}</p>\n      <p>Shares: {shares}</p>\n\n      {accounts[0].toLowerCase() === admin.toLowerCase() ? (\n        <>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h2>Withdraw Funds</h2>\n            <form onSubmit={e => withdrawFunds(e)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"amount\">Amount</label>\n                <input type=\"number\" className=\"form-control\" min={0} id=\"amount\" value={inputs.withdrawAmount} onChange={e => onChange(\"withdrawAmount\", e)} placeholder=\"Amount to withdraw in cUSD\" />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"to\">To</label>\n                <input type=\"text\" className=\"form-control\" id=\"to\" value={inputs.withdrawTo} onChange={e => onChange(\"withdrawTo\", e)} />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n          </div>\n        </div>\n       <hr />\n       </>\n      ) : null}\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Contribute</h2>\n          <form onSubmit={e => contribute(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"number\" className=\"form-control\" id=\"amount\" min={0} value={inputs.contributeAmount} onChange={e => onChange(\"contributeAmount\", e)} placeholder=\"Amount to Deposit in cUSD\"/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Redeem shares</h2>\n          <form onSubmit={e => redeemShares(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"amount\" className=\"form-control\" id=\"amount\" min={0} value={inputs.redeemAmount} onChange={e => onChange(\"redeemAmount\", e)}  placeholder=\"Amount of shares to redeem\"/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Transfer shares</h2>\n          <form onSubmit={e => transferShares(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"number\" className=\"form-control\" id=\"amount\" min={0} value={inputs.transferAmount} onChange={e => onChange(\"transferAmount\", e)} placeholder=\"Amount of shares to transfer\"/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"to\">To</label>\n              <input type=\"text\" className=\"form-control\" id=\"to\" value={inputs.transferTo} onChange={e => onChange(\"transferTo\", e)} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Create proposal</h2>\n          <form onSubmit={e => createProposal(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" className=\"form-control\" id=\"name\" value={inputs.proposalName} onChange={e => onChange(\"proposalName\", e)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"number\" className=\"form-control\" id=\"amount\" min={0} value={inputs.proposalAmount} placeholder=\"Amount in cUSD\" onChange={e => onChange(\"proposalAmount\", e)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipient\">Recipient</label>\n              <input type=\"text\" className=\"form-control\" id=\"recipient\" value={inputs.proposalTo} onChange={e => onChange(\"proposalTo\", e)} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Proposals</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Amount</th>\n                <th>Recipient</th>\n                <th>Votes</th>\n                <th>Vote</th>\n                <th>Ends on</th>\n                <th>Executed</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposals.map(proposal => (\n                <tr key={proposal.id}>\n                  <td>{proposal.id}</td>\n                  <td>{proposal.name}</td>\n                  <td>{new BigNumber(proposal.amount).shiftedBy(-ERC20_DECIMALS).toString()} cUSD</td>\n                  <td>{proposal.recipient}</td>\n                  <td>{new BigNumber(proposal.votes).shiftedBy(-ERC20_DECIMALS).toString()}</td>\n                  <td>\n                    {isFinished(proposal) ? 'Vote finished' : (\n                      proposal.hasVoted ? 'You already voted' : ( \n                      <button \n                        onClick={e => vote(proposal.id)}\n                        type=\"submit\" \n                        className=\"btn btn-primary\">\n                        Vote\n                      </button>\n                    ))}\n                  </td>\n                  <td>\n                    {(new Date(parseInt(proposal.end) * 1000)).toLocaleString()}\n                  </td>\n                  <td>\n                    {proposal.executed ? 'Yes' : (\n                      admin.toLowerCase() === accounts[0].toLowerCase() ? (\n                        <button \n                          onClick={e => executeProposal(proposal.id)}\n                          type=\"submit\" \n                          className=\"btn btn-primary\">\n                          Execute\n                        </button>\n                      ) : 'No' \n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport * as loading from './loading.json';\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: loading.default,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n}\n\nconst Loading = () => {\n  return (\n    <div style={{marginTop: '15rem'}}>\n        <h2 className=\"text-center\">Connect Wallet To Use Dapp</h2>\n        <Lottie options={defaultOptions} height={120} width={120} />\n    </div>\n  )\n}\n\nexport default Loading;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () => {\n  return new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.celo) {\n        const web3 = new Web3(window.celo);\n        try {\n          // Request account access if needed\n          await window.celo.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://localhost:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n};\n\nexport { getWeb3 };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}