{"version":3,"sources":["App.js","loading.js","utils.js","index.js"],"names":["kit","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Loading","style","marginTop","className","options","height","width","DaoContractAddress","App","useState","undefined","web3","setWeb3","accounts","setAccounts","contract","setContract","admin","setAdmin","shares","setShares","proposals","setProposals","balance","setBalance","withdrawAmount","withdrawTo","contributeAmount","redeemAmount","transferAmount","transferTo","proposalName","proposalAmount","proposalTo","inputs","setInputs","useEffect","a","Promise","resolve","reject","window","addEventListener","celo","Web3","enable","console","log","provider","providers","HttpProvider","newKitFromWeb3","eth","getAccounts","Contract","DaoAbi","getTotalBalance","USDBalance","cUSD","shiftedBy","toFixed","methods","call","init","on","isReady","approve","_price","cUSDContract","Erc20Abi","send","from","result","updateShares","_shares","BigNumber","toString","updateProposals","parseInt","nextProposalId","i","all","votes","proposal","hasVoted","push","proposalId","notification","executeProposal","setTimeout","notificationOff","e","preventDefault","amount","target","elements","value","to","withdraw","_amount","isApprove","contribute","redeemShares","transferShares","vote","name","recipient","createProposal","_text","document","querySelector","display","textContent","onChange","zIndex","role","id","toLowerCase","onSubmit","withdrawFunds","htmlFor","type","min","placeholder","map","key","now","Date","getTime","end","isFinished","onClick","toLocaleString","executed","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ab15b20b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DaoAbi from './contracts/DAO.abi.json';\nimport Erc20Abi from './contracts/IERC20Token.abi.json'\nimport { getWeb3 } from './utils.js';\nimport { newKitFromWeb3 } from \"@celo/contractkit\";\nimport BigNumber from \"bignumber.js\"\nimport Loading from './loading';\n\nconst ERC20_DECIMALS = 18\nconst DaoContractAddress = \"0x764354Ab0CDE955258aA7b6fE3C6718A868BA535\"\nconst cUSDContractAddress = \"0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\"\n\nlet kit\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [contract, setContract] = useState(undefined);\n  const [admin, setAdmin] = useState(undefined);\n  const [shares, setShares] = useState(undefined);\n  const [proposals, setProposals] = useState([]);\n  const [balance, setBalance] = useState(0)\n  const [inputs, setInputs] = useState({\n    withdrawAmount: \"\",\n    withdrawTo: \"\",\n    contributeAmount: \"\",\n    redeemAmount: \"\",\n    transferAmount: \"\",\n    transferTo: \"\",\n    proposalName: \"\",\n    proposalAmount: \"\",\n    proposalTo: \"\",\n  });\n\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n\n      kit = newKitFromWeb3(web3)\n      \n      const accounts = await kit.web3.eth.getAccounts()\n      \n      const contract = new kit.web3.eth.Contract(\n        DaoAbi, DaoContractAddress\n      );\n\n      const balance = await kit.getTotalBalance(accounts[0]);\n      const USDBalance = balance.cUSD.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n        \n      const admin = await contract.methods\n        .admin()\n        .call();\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setContract(contract);\n      setAdmin(admin);\n      setBalance(USDBalance)\n    }\n    init();\n    window.celo.on('accountsChanged', accounts => {\n      setAccounts(accounts);\n    });\n  }, []);\n\n  const isReady = () => {\n    return (\n      typeof contract !== 'undefined' \n      && typeof web3 !== 'undefined'\n      && typeof accounts !== 'undefined'\n      && typeof admin !== 'undefined'\n    );\n  }\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    if(isReady()) {\n      updateShares();\n      updateProposals();\n      notificationOff();\n    }\n    // eslint-disable-next-line\n  }, [accounts, contract, web3, admin]);\n\n \n  async function approve(_price) {\n    const cUSDContract = new kit.web3.eth.Contract(Erc20Abi, cUSDContractAddress);\n    const result = await cUSDContract.methods\n      .approve(DaoContractAddress, _price)\n      .send({ from: accounts[0] });\n    return result\n  }\n\n  async function updateShares() {\n    const shares = await contract.methods\n      .shares(accounts[0])\n      .call();\n    const _shares = new BigNumber(shares).shiftedBy(-ERC20_DECIMALS).toString()\n    setShares(_shares);\n  }\n\n  async function updateProposals() {\n    const nextProposalId = parseInt(await contract.methods\n      .nextProposalId()\n      .call());\n\n    const proposals = [];\n    for(let i = 0; i < nextProposalId; i++) { \n      const [proposal, hasVoted] = await Promise.all([\n        contract.methods.proposals(i).call(),\n        contract.methods.votes(accounts[0], i).call()\n      ]);\n      proposals.push({...proposal, hasVoted});\n    }\n    setProposals(proposals);\n  }\n\n  async function executeProposal(proposalId) {\n    notification(\"⌛ Executing Proposal\");\n    try {\n      await contract.methods\n        .executeProposal(proposalId)\n        .send({from: accounts[0]});\n      notification(`🎉 Execution was successful`);\n\n      await updateProposals();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function withdrawFunds(e) {\n    notification(\"⌛ Withdrawing funds\");\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    const to = e.target.elements[1].value;\n    try {\n      await contract.methods\n        .withdraw(amount, to)\n        .send({from: accounts[0]});\n        notification(`🎉 Successful withdrawal.`);\n\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setInputs({\n      ...inputs,\n      withdrawAmount: \"\",\n      withdrawTo: \"\",\n    });\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function contribute(e) {\n    // Error was being generated from here\n    notification(\"⌛ Waiting for payment approval...\")\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    // Converting the amount from type Bignumber to string\n    const _amount = amount.toString();\n    // Check user approve transaction or not\n    let isApprove = true;\n    try {\n      await approve(_amount);\n    } catch (error) {\n      isApprove = false;\n      notification(`⚠️ ${error}`)\n    }\n    if (isApprove){\n      notification(`⌛ Awaiting Contribution...`)\n      try {\n        await contract.methods\n          .contribute(_amount)\n          .send({ from: accounts[0] });\n        notification(`🎉 You are now a Shareholder.`);\n        await updateShares();\n      } catch (error) {\n        notification(`⚠️ ${error}`);\n      }\n      setInputs({\n        ...inputs,\n        contributeAmount: \"\",\n      });\n      setTimeout(notificationOff, 3000);\n    }\n  };\n\n  async function redeemShares(e) {\n    notification(`⌛ Redeeming your shares`);\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    try {\n      await contract.methods\n        .redeemShares(amount)\n        .send({from: accounts[0]});\n      notification(`🎉 Transaction complete, check your wallet balance.`);\n    \n      await updateShares();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setInputs({\n      ...inputs,\n      redeemAmount: \"\",\n    });\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function transferShares(e) {\n    notification(`⌛ Transfering your shares`);\n    e.preventDefault();\n    const amount = new BigNumber(e.target.elements[0].value).shiftedBy(ERC20_DECIMALS);\n    const to = e.target.elements[1].value;\n    try {\n      await contract.methods\n        .transferShares(amount, to)\n        .send({from: accounts[0]});\n        notification(`🎉 Transfer complete`)\n      \n      await updateShares();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setInputs({\n      ...inputs,\n      transferAmount: \"\",\n      transferTo: \"\",\n    });\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function vote(proposalId) {\n    notification(`⌛ Sending your vote `);\n    try {\n      await contract.methods\n        .vote(proposalId)\n        .send({from: accounts[0]});\n      notification(`🎉 Vote Successful`);\n      \n        await updateProposals();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n    setTimeout(notificationOff, 3000);\n  };\n\n  async function createProposal(e) {\n    // Another Possible Error\n    notification(`⌛ Creating your Proposal`);\n    e.preventDefault();\n    const name = e.target.elements[0].value;\n    const amount = new BigNumber(e.target.elements[1].value).shiftedBy(ERC20_DECIMALS);\n    // Converting the amount to string\n    const _amount = amount.toString();\n    const recipient = e.target.elements[2].value;\n\n    try {\n      await contract.methods\n        .createProposal(name, _amount, recipient)\n        .send({from: accounts[0]});\n      notification(`🎉 Proposal Creation Successful`);\n\n      await updateProposals();\n    } catch (error) {\n      notification(`⚠️ ${error}`);\n    }\n\n    setInputs({\n      proposalName: \"\",\n      proposalAmount: \"\",\n      proposalTo: \"\",\n    });\n    \n    setTimeout(notificationOff, 3000);\n  };\n\n  function isFinished(proposal) {\n    const now = new Date().getTime();\n    const proposalEnd =  new Date(parseInt(proposal.end) * 1000);\n    return (proposalEnd > now) > 0 ? false : true;\n  }\n\n  function notification(_text) {\n    document.querySelector(\".alert\").style.display = \"block\"\n    document.querySelector(\"#notification\").textContent = _text\n  }\n  \n  function notificationOff() {\n    document.querySelector(\".alert\").style.display = \"none\"\n  }\n\n  function onChange(name, e) {\n    setInputs({\n      ...inputs,\n      [name]: e.target.value,\n    });\n  }\n\n  if (!isReady()) {\n    return <Loading />\n    // return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"container\">\n        <div className=\"alert alert-warning sticky-top mt-2\" style={{zIndex:\"5\" }} role=\"alert\">\n          <span id=\"notification\">Loading...</span>\n        </div>\n\n      <h1 className=\"text-center\">DAO</h1>\n      <p>Account: {accounts[0]}</p>\n      <p>Shares: {shares}</p>\n      <p>Balance: {balance}</p>\n\n      {accounts[0].toLowerCase() === admin.toLowerCase() ? (\n        <>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <h2>Withdraw Funds</h2>\n            <form onSubmit={e => withdrawFunds(e)}>\n              <div className=\"form-group\">\n                <label htmlFor=\"amount\">Amount</label>\n                <input type=\"number\" className=\"form-control\" min={0} id=\"amount\" value={inputs.withdrawAmount} onChange={e => onChange(\"withdrawAmount\", e)} placeholder=\"Amount to withdraw in cUSD\" />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"to\">To</label>\n                <input type=\"text\" className=\"form-control\" id=\"to\" value={inputs.withdrawTo} onChange={e => onChange(\"withdrawTo\", e)} />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n          </div>\n        </div>\n       <hr />\n       </>\n      ) : null}\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Contribute</h2>\n          <form onSubmit={e => contribute(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"number\" className=\"form-control\" id=\"amount\" min={0} value={inputs.contributeAmount} onChange={e => onChange(\"contributeAmount\", e)} placeholder=\"Amount to Deposit in cUSD\"/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Redeem shares</h2>\n          <form onSubmit={e => redeemShares(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"amount\" className=\"form-control\" id=\"amount\" min={0} value={inputs.redeemAmount} onChange={e => onChange(\"redeemAmount\", e)}  placeholder=\"Amount of shares to redeem\"/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Transfer shares</h2>\n          <form onSubmit={e => transferShares(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"number\" className=\"form-control\" id=\"amount\" min={0} value={inputs.transferAmount} onChange={e => onChange(\"transferAmount\", e)} placeholder=\"Amount of shares to transfer\"/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"to\">To</label>\n              <input type=\"text\" className=\"form-control\" id=\"to\" value={inputs.transferTo} onChange={e => onChange(\"transferTo\", e)} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Create proposal</h2>\n          <form onSubmit={e => createProposal(e)}>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" className=\"form-control\" id=\"name\" value={inputs.proposalName} onChange={e => onChange(\"proposalName\", e)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input type=\"number\" className=\"form-control\" id=\"amount\" min={0} value={inputs.proposalAmount} placeholder=\"Amount in cUSD\" onChange={e => onChange(\"proposalAmount\", e)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"recipient\">Recipient</label>\n              <input type=\"text\" className=\"form-control\" id=\"recipient\" value={inputs.proposalTo} onChange={e => onChange(\"proposalTo\", e)} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <h2>Proposals</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Amount</th>\n                <th>Recipient</th>\n                <th>Votes</th>\n                <th>Vote</th>\n                <th>Ends on</th>\n                <th>Executed</th>\n              </tr>\n            </thead>\n            <tbody>\n              {proposals.map(proposal => (\n                <tr key={proposal.id}>\n                  <td>{proposal.id}</td>\n                  <td>{proposal.name}</td>\n                  <td>{new BigNumber(proposal.amount).shiftedBy(-ERC20_DECIMALS).toString()} cUSD</td>\n                  <td>{proposal.recipient}</td>\n                  <td>{new BigNumber(proposal.votes).shiftedBy(-ERC20_DECIMALS).toString()}</td>\n                  <td>\n                    {isFinished(proposal) ? 'Vote finished' : (\n                      proposal.hasVoted ? 'You already voted' : ( \n                      <button \n                        onClick={e => vote(proposal.id)}\n                        type=\"submit\" \n                        className=\"btn btn-primary\">\n                        Vote\n                      </button>\n                    ))}\n                  </td>\n                  <td>\n                    {(new Date(parseInt(proposal.end) * 1000)).toLocaleString()}\n                  </td>\n                  <td>\n                    {proposal.executed ? 'Yes' : (\n                      admin.toLowerCase() === accounts[0].toLowerCase() ? (\n                        <button \n                          onClick={e => executeProposal(proposal.id)}\n                          type=\"submit\" \n                          className=\"btn btn-primary\">\n                          Execute\n                        </button>\n                      ) : 'No' \n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport Lottie from 'react-lottie';\nimport * as loading from './loading.json';\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: loading.default,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice'\n  }\n}\n\nconst Loading = () => {\n  return (\n    <div style={{marginTop: '15rem'}}>\n        <h2 className=\"text-center\">Connect Wallet To Use Dapp</h2>\n        <Lottie options={defaultOptions} height={120} width={120} />\n    </div>\n  )\n}\n\nexport default Loading;\n","import Web3 from \"web3\";\n\nconst getWeb3 = () => {\n  return new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.celo) {\n        const web3 = new Web3(window.celo);\n        try {\n          // Request account access if needed\n          await window.celo.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://localhost:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n};\n\nexport { getWeb3 };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}